name: 'Terraform_Approval'

on:
  push:
    branches: #[ "main" ]
      - 'main'
      - 'test'
  pull_request:

#permissions: write
permissions:
  issues: write
#permissions:
#  contents: read-all

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell, set working directory
    defaults:
      run:
        shell: bash
        working-directory: ./website_s3

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Set the AWS access key and secret access key
    - name: Configure AWS Credentials
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: arn:aws:iam::594300857662:role/anne-github-eks-role
        aws-region: ap-southeast-2

    # Initialize a new or existing Terraform working directory, run the plan to generate tfplan.out for terraform apply to use
    - name: Terraform Init/Plan
      run: |
        terraform fmt -check
        terraform init
        terraform plan -input=false -out=tfplan.out

#    - name: Manual approval
#      uses: trstringer/manual-approval@v1
#      with:
#        secret: ${{ github.TOKEN }}
#        approvers: xiaoanne
#        minimum-approvals: 1
#        issue-title: "Manual approval before applying terraform changes"

#    - name: Upload tfplan.out
#      uses: actions/upload-artifact@v3
#      with:
#        name: plan
#        path: /home/runner/work/aws-h1/aws-h1/website_s3/tfplan.out
#    - name: Download tfplan.out
#      uses: actions/download-artifact@v3
#      with:
#        name: plan

    - name: Terraform Apply/Destroy
      run: |
        terraform apply tfplan.out
        sleep 10
        terraform destroy -auto-approve