name: 'Terraform'

on:
  push:
    branches: #[ "main" ]
      - 'main'
      - 'test'
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell, set working directory
    defaults:
      run:
        shell: bash
        working-directory: ./website_s3

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Set the AWS access key and secret access key
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory, run the plan to generate tfplan.out for terraform apply to use
    - name: Terraform Init/Plan
      run: |
        terraform fmt -check
        terraform init
        terraform plan -input=false -out=tfplan.out

    # The assigned approvers need to manually approve to proceed with terraform apply
    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: xiaoanne
        minimum-approvals: 1
        issue-title: "Terraform apply"
        environment: prod
#    - name: Manual approve
#      uses: trstringer/manual-approval@v1
#      with:
#        secret: ${{ github.TOKEN }}
#        approvers: xiaoanne
#        minimum-approvals: 1

    # Apply and/or destroy the infrastructure
    - name: Terraform Apply/Destroy
      run: |
        terraform apply tfplan.out
        sleep 60
        terraform destroy -auto-approve